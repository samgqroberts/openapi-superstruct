import { readFileSync } from 'fs';
import { fileSync } from 'tmp';

import { generate } from '.';

describe('generate', () => {
  describe('object input', () => {
    const input = {
      components: {
        schemas: {
          Model: {
            type: 'string'
          }
        }
      }
    };
    const expectedOutput = `/* eslint-disable */
/* autogenerated by openapi-superstruct */

import * as s from 'superstruct';

const struct_Model = s.string();

export const structs = {
  "Model": struct_Model,
};

export type Model = s.Infer<typeof structs['Model']>;
`;
    it('is allowed in generate', async () => {
      const file = await generate({ input });
      expect(file).toEqual(expectedOutput);
    });
    it('output parameter', async () => {
      const { name: path } = fileSync();
      await generate({ input, output: path });
      const outputFile = readFileSync(path).toString();
      expect(outputFile).toEqual(expectedOutput);
    });
  });
});
