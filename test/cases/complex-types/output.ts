/* eslint-disable */
/* autogenerated by openapi-superstruct */

import * as s from 'superstruct';

const struct_ModelOne = s.object({
  "required_array<string>": s.array(s.string()),
  "required_nullable_array<string>": s.nullable(s.array(s.string())),
  "optional_array<string>": s.optional(s.array(s.string())),
  "optional_nullable_array<string>": s.optional(s.nullable(s.array(s.string()))),
  "required_array<nullable_string>": s.array(s.nullable(s.string())),
  "deeply_nested_array": s.optional(s.array(s.array(s.array(s.integer())))),
  "required_object": s.object({
    "nested_required_string": s.string(),
    "nested_optional_nullable_integer": s.optional(s.nullable(s.integer())),
    "nested_required_array<boolean>": s.array(s.boolean()),
    "nested_required_object": s.object({
      "doubly_nested_required_string": s.string(),
    }),
  }),
});

export const structs = {
  "ModelOne": struct_ModelOne,
};

export type ModelOne = s.Infer<typeof structs['ModelOne']>;
